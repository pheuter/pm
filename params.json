{"name":"pm","body":"### About\r\n\r\n**pm** is a stack-based programming language resembling the likes of Forth and Factor. pm supports common stack operations as well as control flow and function definition. Here are several examples of **pm** code. Feel free to visit the [wiki](http://github.com/pheuter/pm/wiki) for more information.\r\n\r\n_Call Quotations_\r\n```factor\r\n[ 1 1 + ] call\r\n```\r\n**2**\r\n\r\n***\r\n\r\n_Iteration_\r\n```factor\r\n1 5 range [ dup * ] map\r\n```\r\n**{ 1 4 9 16 25 }**\r\n\r\n***\r\n\r\n_Control Flow_\r\n```factor\r\n144 12 2 ^ = [ t ] [ f ] if\r\n```\r\n**t**\r\n\r\n***\r\n\r\n_Defining Functions_\r\n```factor\r\n: factorial | 1 swap range 1 [ * ] reduce ;\r\n5 factorial\r\n```\r\n**120**\r\n\r\n***\r\n\r\n### Requirements\r\n\r\nMake sure you have *NodeJS* installed on your system\r\n  \r\n```sh\r\n$ wget http://github.com/ry/node/tarball/master\r\n$ tar xf *node*.tar.gz\r\n$ cd *node* && ./configure && make && sudo make install\r\n```\r\n\r\n### Usage\r\n\r\nTo run a file: \r\n```sh\r\n$ ./interpreter.js test/test.pm\r\n```\r\n  \r\nTo run interactively:\r\n```\r\n$ ./interpreter.js\r\n```\r\n\r\nTo run through the web: \r\n```sh\r\n$ cd web && node server.js\r\n``` \r\n\r\nand navigate to ``localhost:8080``","tagline":"post mortem - A stack-based programming language written in NodeJS and parsed using PEG.js","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}